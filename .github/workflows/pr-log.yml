name: Pull Request Data Fetch

on:
  pull_request:
    types: [opened, synchronize, reopened] # Triggers the action on PR open, update, or reopen

jobs:
  fetch-pr-data:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 # Checks out the repository

      - name: Fetch PR metadata
        id: pr-metadata
        uses: actions/github-script@v6
        with:
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            return {
              title: pr.data.title,
              number: pr.data.number,
              author: pr.data.user.login,
              created_at: pr.data.created_at,
              updated_at: pr.data.updated_at,
              url: pr.data.html_url,
              additions: pr.data.additions,
              deletions: pr.data.deletions,
              changed_files: pr.data.changed_files,
            };

      - name: Log PR Metadata
        run: |
          echo "PR Title: ${{ steps.pr-metadata.outputs.title }}"
          echo "PR Number: ${{ steps.pr-metadata.outputs.number }}"
          echo "Author: ${{ steps.pr-metadata.outputs.author }}"
          echo "Created At: ${{ steps.pr-metadata.outputs.created_at }}"
          echo "Updated At: ${{ steps.pr-metadata.outputs.updated_at }}"
          echo "URL: ${{ steps.pr-metadata.outputs.url }}"
          echo "Additions: ${{ steps.pr-metadata.outputs.additions }}"
          echo "Deletions: ${{ steps.pr-metadata.outputs.deletions }}"
          echo "Changed Files: ${{ steps.pr-metadata.outputs.changed_files }}"

      - name: Fetch PR changeset
        id: pr-changes
        uses: actions/github-script@v6
        with:
          script: |
            const files = await github.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });
            const changes = files.data.map(file => ({
              filename: file.filename,
              status: file.status,
              additions: file.additions,
              deletions: file.deletions,
              changes: file.changes,
              patch: file.patch,
            }));
            return JSON.stringify(changes);

      - name: Log PR Changeset
        run: |
          echo "PR Changeset: ${{ steps.pr-changes.outputs.result }}"
